{"pageProps":{"post":{"id":"modulo_3","autor":"<h2>¿Qué es Git?</h2>\n<p>Git es un software de control de versiones, te permite mantener  varias versiones de\nun archivo e incluso un proyecto. Te permite  crear nuevas versiones y visitar versiones anteriores del proyecto. En otras palabras, !Git es una máquina del tiempo!</p>\n<img src=\"https://miro.medium.com/max/801/1*DhagidpZutkaCmAZobmzDQ.png\" width=\"auto\" border=\"0\">\n<h2>¿Qué es GitHub?</h2>\n<p>GitHub es la plataforma web compatible con Git que te permite almacenar tus proyectos en la nube, tambíen te permite tener un monitoreo de tus proyectos e interactuar con proyectos de otros programadores u organizaciones.</p>\n<h2>Cómo instalar Git</h2>\n<p>Es una colección de herramientas que sirven para automatizar el proceso de instalación, actualización, configuración y eliminación de paquetes de software.</p>\n<pre><code>[me@linuxbox ~]$ pkg install git\n</code></pre>\n<p>El comando pkg install nos permite instalar software que este dentro del repositorio donde estamos consultando.</p>\n<h2>Cómo empezar con GitHub</h2>\n<p><a href=\"https://github.com/\">Haz click para crear una nueva cuenta: </a>\nluego de eso debemos crearnos una 'token'  que será nuestra llave o la contraseña para autentificarnos con Git y poder subir nuestros proyectos a GitHub ( Nótese que es una contraseña diferente a la de la cuenta para iniciar sesión en github.com)</p>\n<p>Para crear el token debemos seguir los siguentes pasos:</p>\n<ul>\n<li>\n<p>Verifique su dirección de correo electrónico , si aún no ha sido verificado.</p>\n</li>\n<li>\n<p>En la esquina superior derecha de cualquier página, haga clic en su foto de perfil y luego en Configuración .</p>\n</li>\n</ul>\n   <img src=\"https://i.imgur.com/ns8ZD73.jpg\" width=\"auto\" border=\"0\">\n<ul>\n<li>Icono de configuración en la barra de usuario</li>\n</ul>\n   <img src=\"https://i.imgur.com/dn7aGGD.png\" width=\"auto\" border=\"0\">\n-   En la barra lateral izquierda, haz clic en Configuración del desarrollador .\n   <img src=\"https://i.imgur.com/0lBvYSd.png\" width=\"auto\" border=\"0\">\n-   En la barra lateral izquierda, en Tokens de acceso personal , haga clic en Tokens (clásico) .\n    <img src=\"https://i.imgur.com/sJPhIvn.png\" width=\"auto\" border=\"0\">\n-   Seleccione Generar nuevo token y luego haga clic en Generar nuevo token (clásico) .\n<img src=\"https://i.imgur.com/sJPhIvn.png\" width=\"auto\" border=\"0\">\n-   Dale a tu token un nombre descriptivo.\n<img src=\"https://i.imgur.com/c1S1NTv.png\" width=\"auto\" border=\"0\">\n-   Copia el token que se genera automáticamente.\n<img src=\"https://i.imgur.com/VuF2Vp0.png\" width=\"auto\" border=\"0\">\nAhora con este Token ya podemos subir nuestros proyectos hechos con Git.\n<h2>Creando mi primer repositorio en GitHub:</h2>\n<ul>\n<li>\n<p>Presionamos el botón \"+\" en la parte superior de la pagina web</p>\n</li>\n<li>\n<p>Click en \"Nuevo repositorio\"</p>\n</li>\n<li>\n<p>Le ponemos un nombre y una descripcion a el repositorio a crear.</p>\n</li>\n<li>\n<p>Seleccionamos la configuracion de privacidad del repositorio.</p>\n</li>\n<li>\n<p>Click en \"Crear repositorio\"</p>\n</li>\n</ul>\n<h2>En nuestro proyecto:</h2>\n<p>Primero debemos estar localizados en la carpeta que contiene nuestro proyecto.</p>\n<p>Para inicializar un proyecto de git en la termina ejecutamos el comando</p>\n<pre><code>git init \n</code></pre>\n<p>luego configuramos nuestro correo y nombre con los comandos</p>\n<pre><code>git config --global user.mail \"tuemail@ejemplo.com\"\ngit config --global user.name \"tunombre\"\n</code></pre>\n<p>creamos el archivo README.md que contendrá la descripción de nuestro proyecto.</p>\n<pre><code>echo >> \"Mi primer  proyecto en Git\" >> READMI.md\n</code></pre>\n<p>Nos cambiamos a la rama main</p>\n<pre><code>git branch -M main\n</code></pre>\n<p>Añadimos los cambios hechos en el archivo README.md con el comando</p>\n<pre><code>git add README.md\n</code></pre>\n<p>creamos un nuevo commit  con un mensaje descriptivo.</p>\n<pre><code>git commit -m \"Mi primer commit\" \n</code></pre>\n<p>debemos enlazar nuestro repoitorio local con GitHub para eso copiamos la siguiente linea que nos porporciona github</p>\n<pre><code>git remote add origin https://github.com/username/new_repo\n</code></pre>\n<p>Y subimos nuestros cambios a nuestro repositorio de GitHub</p>\n<pre><code>git push -u origin main\n</code></pre>\n<h2>UH OH??!! ¿Qué ha ocurrido ?</h2>\n<p>En este instante Git quiere que nos autentifiquemos como usuario aquí es donde necesitamos el token que generamos anteriormente.</p>\n<p>Ingresa con el nombre que ingresaste en user.name  luego\nPega el token generado en el lugar de 'Password'</p>\n<p>Y listo! Has subido tu repositorio de git a la nube satisfactoriamente!</p>\n<h2>Comandos basicos de Git</h2>\n<p>A continuación conocemos los comandos basicos.</p>\n<pre><code>git clone &#x3C;url de repositorio>\n</code></pre>\n<p>El comando clone te permite clonar en tu dispositivo un respositorio existente en github, copiando su dirección URL</p>\n<hr>\n<pre><code>git add &#x3C;archivo>\n</code></pre>\n<p>El comando add guardará el o los archivos que se pasen como parametro  en el area de staging.</p>\n<pre><code>git add .\n</code></pre>\n<p>Ya que en  el proyecto quieras añadir muchos archivos momdificados ingresando un punto \".\"  se añadiran todos los archivos en la carpeta y subcarpetas existentes.</p>\n<hr>\n<pre><code>git commit -m \"mensaje\"\n</code></pre>\n<p>Con este comando creamos un punto de guardado, un nuevo  nodo en nuestra linea del tiempo, nodo que podremos visitar en el futuro. Debes asegurarte que el mensaje se corto y que describa lo que se modificó enn esta versión</p>\n<hr>\n<pre><code>git push -u origin &#x3C;rama>\n</code></pre>\n<p>Push nos permite subir el estado actual de nuestro proyecto a la nube y así tener un respaldo de este accesible en cualquier parte del mundo.</p>\n<hr>\n<pre><code>git checkout &#x3C;ID de commit>\n</code></pre>\n<p>checkout nos permite viajar en el tiempo y visitar commits anteriores. Pero primero debes verificar  haber guardado todos tus cambios en un commit.</p>\n<hr>\n<pre><code>git branch &#x3C;nombre>\n</code></pre>\n<p>Branch nos permite crear nuevas lineas de tiempo.</p>\n<hr>\n<pre><code>git checkout &#x3C;nombre de rama>\n</code></pre>\n<p>Con Checkout podemos visitar el ultimo commit de otras ramas existentes en el proyecto. Nuevamente asegurate de tener todos tus cambios guardados en un commit o git no te permitira cambiar de rama.</p>\n","content":"<h2>¿Qué es Git?</h2>\n<p>Git es un software de control de versiones, te permite mantener  varias versiones de\nun archivo e incluso un proyecto. Te permite  crear nuevas versiones y visitar versiones anteriores del proyecto. En otras palabras, !Git es una máquina del tiempo!</p>\n<img src=\"https://miro.medium.com/max/801/1*DhagidpZutkaCmAZobmzDQ.png\" width=\"auto\" border=\"0\">\n<h2>¿Qué es GitHub?</h2>\n<p>GitHub es la plataforma web compatible con Git que te permite almacenar tus proyectos en la nube, tambíen te permite tener un monitoreo de tus proyectos e interactuar con proyectos de otros programadores u organizaciones.</p>\n<h2>Cómo instalar Git</h2>\n<p>Es una colección de herramientas que sirven para automatizar el proceso de instalación, actualización, configuración y eliminación de paquetes de software.</p>\n<pre><code>[me@linuxbox ~]$ pkg install git\n</code></pre>\n<p>El comando pkg install nos permite instalar software que este dentro del repositorio donde estamos consultando.</p>\n<h2>Cómo empezar con GitHub</h2>\n<p><a href=\"https://github.com/\">Haz click para crear una nueva cuenta: </a>\nluego de eso debemos crearnos una 'token'  que será nuestra llave o la contraseña para autentificarnos con Git y poder subir nuestros proyectos a GitHub ( Nótese que es una contraseña diferente a la de la cuenta para iniciar sesión en github.com)</p>\n<p>Para crear el token debemos seguir los siguentes pasos:</p>\n<ul>\n<li>\n<p>Verifique su dirección de correo electrónico , si aún no ha sido verificado.</p>\n</li>\n<li>\n<p>En la esquina superior derecha de cualquier página, haga clic en su foto de perfil y luego en Configuración .</p>\n</li>\n</ul>\n   <img src=\"https://i.imgur.com/ns8ZD73.jpg\" width=\"auto\" border=\"0\">\n<ul>\n<li>Icono de configuración en la barra de usuario</li>\n</ul>\n   <img src=\"https://i.imgur.com/dn7aGGD.png\" width=\"auto\" border=\"0\">\n-   En la barra lateral izquierda, haz clic en Configuración del desarrollador .\n   <img src=\"https://i.imgur.com/0lBvYSd.png\" width=\"auto\" border=\"0\">\n-   En la barra lateral izquierda, en Tokens de acceso personal , haga clic en Tokens (clásico) .\n    <img src=\"https://i.imgur.com/sJPhIvn.png\" width=\"auto\" border=\"0\">\n-   Seleccione Generar nuevo token y luego haga clic en Generar nuevo token (clásico) .\n<img src=\"https://i.imgur.com/sJPhIvn.png\" width=\"auto\" border=\"0\">\n-   Dale a tu token un nombre descriptivo.\n<img src=\"https://i.imgur.com/c1S1NTv.png\" width=\"auto\" border=\"0\">\n-   Copia el token que se genera automáticamente.\n<img src=\"https://i.imgur.com/VuF2Vp0.png\" width=\"auto\" border=\"0\">\nAhora con este Token ya podemos subir nuestros proyectos hechos con Git.\n<h2>Creando mi primer repositorio en GitHub:</h2>\n<ul>\n<li>\n<p>Presionamos el botón \"+\" en la parte superior de la pagina web</p>\n</li>\n<li>\n<p>Click en \"Nuevo repositorio\"</p>\n</li>\n<li>\n<p>Le ponemos un nombre y una descripcion a el repositorio a crear.</p>\n</li>\n<li>\n<p>Seleccionamos la configuracion de privacidad del repositorio.</p>\n</li>\n<li>\n<p>Click en \"Crear repositorio\"</p>\n</li>\n</ul>\n<h2>En nuestro proyecto:</h2>\n<p>Primero debemos estar localizados en la carpeta que contiene nuestro proyecto.</p>\n<p>Para inicializar un proyecto de git en la termina ejecutamos el comando</p>\n<pre><code>git init \n</code></pre>\n<p>luego configuramos nuestro correo y nombre con los comandos</p>\n<pre><code>git config --global user.mail \"tuemail@ejemplo.com\"\ngit config --global user.name \"tunombre\"\n</code></pre>\n<p>creamos el archivo README.md que contendrá la descripción de nuestro proyecto.</p>\n<pre><code>echo >> \"Mi primer  proyecto en Git\" >> READMI.md\n</code></pre>\n<p>Nos cambiamos a la rama main</p>\n<pre><code>git branch -M main\n</code></pre>\n<p>Añadimos los cambios hechos en el archivo README.md con el comando</p>\n<pre><code>git add README.md\n</code></pre>\n<p>creamos un nuevo commit  con un mensaje descriptivo.</p>\n<pre><code>git commit -m \"Mi primer commit\" \n</code></pre>\n<p>debemos enlazar nuestro repoitorio local con GitHub para eso copiamos la siguiente linea que nos porporciona github</p>\n<pre><code>git remote add origin https://github.com/username/new_repo\n</code></pre>\n<p>Y subimos nuestros cambios a nuestro repositorio de GitHub</p>\n<pre><code>git push -u origin main\n</code></pre>\n<h2>UH OH??!! ¿Qué ha ocurrido ?</h2>\n<p>En este instante Git quiere que nos autentifiquemos como usuario aquí es donde necesitamos el token que generamos anteriormente.</p>\n<p>Ingresa con el nombre que ingresaste en user.name  luego\nPega el token generado en el lugar de 'Password'</p>\n<p>Y listo! Has subido tu repositorio de git a la nube satisfactoriamente!</p>\n<h2>Comandos basicos de Git</h2>\n<p>A continuación conocemos los comandos basicos.</p>\n<pre><code>git clone &#x3C;url de repositorio>\n</code></pre>\n<p>El comando clone te permite clonar en tu dispositivo un respositorio existente en github, copiando su dirección URL</p>\n<hr>\n<pre><code>git add &#x3C;archivo>\n</code></pre>\n<p>El comando add guardará el o los archivos que se pasen como parametro  en el area de staging.</p>\n<pre><code>git add .\n</code></pre>\n<p>Ya que en  el proyecto quieras añadir muchos archivos momdificados ingresando un punto \".\"  se añadiran todos los archivos en la carpeta y subcarpetas existentes.</p>\n<hr>\n<pre><code>git commit -m \"mensaje\"\n</code></pre>\n<p>Con este comando creamos un punto de guardado, un nuevo  nodo en nuestra linea del tiempo, nodo que podremos visitar en el futuro. Debes asegurarte que el mensaje se corto y que describa lo que se modificó enn esta versión</p>\n<hr>\n<pre><code>git push -u origin &#x3C;rama>\n</code></pre>\n<p>Push nos permite subir el estado actual de nuestro proyecto a la nube y así tener un respaldo de este accesible en cualquier parte del mundo.</p>\n<hr>\n<pre><code>git checkout &#x3C;ID de commit>\n</code></pre>\n<p>checkout nos permite viajar en el tiempo y visitar commits anteriores. Pero primero debes verificar  haber guardado todos tus cambios en un commit.</p>\n<hr>\n<pre><code>git branch &#x3C;nombre>\n</code></pre>\n<p>Branch nos permite crear nuevas lineas de tiempo.</p>\n<hr>\n<pre><code>git checkout &#x3C;nombre de rama>\n</code></pre>\n<p>Con Checkout podemos visitar el ultimo commit de otras ramas existentes en el proyecto. Nuevamente asegurate de tener todos tus cambios guardados en un commit o git no te permitira cambiar de rama.</p>\n","title":"Módulo 3","date":"2022-11-17","description":"Primeros pasos por Git y Github, Herramientas poderosas que te ayudarán a mantener un control de versiones sobre tu proyectos de desarrollo.","coverUrl":"https://camo.githubusercontent.com/38f113b96a368dfb7f634d2f2da97e7b8c748042d2a284b97c3fad048bb3ff55/68747470733a2f2f6d69726f2e6d656469756d2e636f6d2f6d61782f323733322f312a6d74736b3366515f4252656d466964686b656c3364412e706e67","tags":["Git","GitHub"],"theme":"indigo"},"related":[{"id":"modulo_1","title":"Módulo 1","date":"2022-11-14","description":"En este post encontraras las instrucciones necesarias para instalar las apliaciones de: TERMUX, ACODE, AIDE, Java N-IDE","coverUrl":"https://i.ibb.co/XpT8F87/Dise-o-sin-t-tulo.png","autor":"Rodrigo","tags":["Android","Linux"]},{"id":"modulo_2","title":"Módulo 2","date":"2022-11-16","description":"Primeros pasos por Termux y Bash, herramientas útiles que estarán presentes en toda tu vida como desarrollador de software","coverUrl":"https://i.ibb.co/YcYzvjM/Termux.png","tags":["Android","Linux"," Bash"]},{"id":"modulo_3","title":"Módulo 3","date":"2022-11-17","description":"Primeros pasos por Git y Github, Herramientas poderosas que te ayudarán a mantener un control de versiones sobre tu proyectos de desarrollo.","coverUrl":"https://camo.githubusercontent.com/38f113b96a368dfb7f634d2f2da97e7b8c748042d2a284b97c3fad048bb3ff55/68747470733a2f2f6d69726f2e6d656469756d2e636f6d2f6d61782f323733322f312a6d74736b3366515f4252656d466964686b656c3364412e706e67","tags":["Git","GitHub"]},{"id":"modulo_4","title":"Módulo 4","date":"2022-11-18","description":"En este módulo se deatallan ejercicios, recursos como libros, paginas, canales de YouTube y algunos retos","coverUrl":"https://media.geeksforgeeks.org/wp-content/uploads/20220831170024/GitPush3.jpg","tags":["Git","GitHub","Recursos"]},{"id":"octim","title":"Herramientas necesarias","date":"2022-11-26","description":"En este módulo se deatallan  links, videos, tutoriales para que podamos continuar el curso","coverUrl":"https://c8.alamy.com/compes/2j2hw74/hombre-y-robot-con-ordenadores-sentados-juntos-en-el-lugar-de-trabajo-fuerza-de-trabajo-de-inteligencia-artificial-de-futura-ilustracion-de-vector-plano-amistad-ai-cooperacion-2j2hw74.jpg","tags":["Git","GitHub","Recursos","Bash"]},{"id":"ICPC_UMSS","title":"Programación Competitiva UMSS","date":"2022-12-16","description":"En este módulo se deatallan ejercicios, recursos como libros, paginas, canales de YouTube y algunos retos","coverUrl":"https://narsten.com/wp-content/uploads/2022/09/icpc19.png","tags":["ICPC","RPC","PC","Contests"]}]},"__N_SSG":true}