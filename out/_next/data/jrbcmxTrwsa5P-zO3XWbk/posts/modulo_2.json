{"pageProps":{"post":{"id":"modulo_2","autor":"<h2>¿Qué es Bash?</h2>\n<p>Bash (acrónimo de Bourne-Again Shell) es un intérprete de comandos y lenguaje de programación integrado que corre bajo el macroprocesador Shell de Unix.</p>\n<img src=\"https://i.ibb.co/0qkJzWs/Captura-de-pantalla-37.png\" width=\"350\" alt=\"Captura-de-pantalla-37\" border=\"0\">\r\n<img src=\"https://i.ibb.co/gvYzMpH/Captura-de-pantalla-35.png\" width=\"350\" alt=\"Captura-de-pantalla-35\" border=\"0\" center=\"auto\">\n<h2>¿Qué es la shell prompt?</h2>\n<p>Es  donde empezamos a escribir los comandos que ingresamos a la shell.</p>\n<p>Ejemplo</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$</code></pre>\n<h2>Gestor de paquetes PKG, APT</h2>\n<p>Es una colección de herramientas que sirven para automatizar el proceso de instalación, actualización, configuración y eliminación de paquetes de software.</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg install [nombreDelPaquete]</code></pre>\n<p>El comando pkg install nos permite instalar software que este dentro del repositorio donde estamos consultando.</p>\n<p>Ejemplos:</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg update</code></pre>\n<p>tree es una herramienta que nos va a permitir ver como un arbol nuestro sistema de archivos.</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg install tree</code></pre>\n<p>cmatrix es una simulacion de caracteres.</p>\n<pre><code class=\"hljs language-bash\"></code></pre>\n<p>El comando pkg search nombrePaquete, nos permite buscar en el repositorio si existe algun software con ese nombre.</p>\n<p>Ejemplos:</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg search python</code></pre>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg search git</code></pre>\n<h2>Comandos basicos y necesarios en BASH</h2>\n<p>A continuación conocemos los comandos basicos.</p>\n<pre><code class=\"hljs language-bash\">Acciones basicas en Bash\r\n    Mover(mv)\r\n\tCrearCarpetas(mkdir)\r\n\tCrearArchivos(touch)\r\n    Escribir(<span class=\"hljs-built_in\">echo</span>, nano)\r\n    Ver (cat, more, less, file)\r\n\tVer sistema de archivos(ls)\r\n    Copiar(cp)\r\n\tBorrar(rm)\r\n    Cotar(cut)\r\n    Buscar(grep)      \r\n    Moverse por el sistema de archivos(<span class=\"hljs-built_in\">cd</span>)</code></pre>\n<h2>PRIMER EJERCICIO</h2>\n<pre><code class=\"hljs language-bash\">Autor: Jorge Alejandro García\r\nTema: Bash\r\nDescripción:\r\n\r\n- Crear un directorio llamado pruebas\r\n- Copiar el archivo /etc/passwd en dicho directorio\r\n- Listar los archivos existentes\r\n- Extraer únicamente las 10 primeras líneas del documento\r\n- Extraer únicamente las 10 últimas líneas del documento\r\n- Cambiar los permisos del fichero a 000\r\n- Probar a leer dicho fichero\r\n- Buscar la palabra “root” dentro del fichero \r\n\r\nComandos\r\n      grep [búsqueda] [fichero] Búsqueda de información en un fichero\r\n      grep -r [búsqueda] [directorio] Búsqueda recursiva de información \r\n      cut -d “[carácter]” -f [pos] Cortar una cadena mediante un caracter</code></pre>\n<h2>TAREA - para el 17-11-2022</h2>\n<pre><code class=\"hljs language-bash\">\r\n\tPkg install git\r\n\tPkg install python\r\n    git <span class=\"hljs-built_in\">clone</span> https://github.com/DeepSociety/wiki-termux\r\n    <span class=\"hljs-built_in\">cd</span> wiki-termux\r\n    chmod 777 wiki\r\n    ./wiki\r\nInstalar personalizaciones para termux:\r\n    Paso 1 : actualizar los paquetes de termux\r\n    apt update -y (poner y a todo para actualizar las versiones de paquetes).\r\n    apt upgrade -y (poner y a todo que instale las versiones mas recientes).\r\nPaso 2: instalar paquetes\r\n    pkg install python -y\r\n    pkg install python2 -y\r\n    pkg install git -y\r\n    Pip install lolcat\r\nPaso 3: clonar el repositorio\r\n    git <span class=\"hljs-built_in\">clone</span> https://github.com/noob-hackers/T-LOAD\r\nPaso 4: ejecutar los comandos \r\n    (<span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$HOME</span>) o (<span class=\"hljs-built_in\">cd</span>) \r\n      ls\r\n    <span class=\"hljs-built_in\">cd</span> T-LOAD\r\n      ls \r\n    bash t-load.sh (poner y a todos este paso puede demorar un tiempo).\r\nPaso 5: una ves instalado todo.\r\n    Pedirá un primer y segundo nombre ponerlo a gusto.\r\n    Apretar enter\r\n    Finalizar termux con el comando <span class=\"hljs-built_in\">exit</span>.\r\n    y volver a entrar.\r\n</code></pre>\n","content":"<h2>¿Qué es Bash?</h2>\n<p>Bash (acrónimo de Bourne-Again Shell) es un intérprete de comandos y lenguaje de programación integrado que corre bajo el macroprocesador Shell de Unix.</p>\n<img src=\"https://i.ibb.co/0qkJzWs/Captura-de-pantalla-37.png\" width=\"350\" alt=\"Captura-de-pantalla-37\" border=\"0\">\r\n<img src=\"https://i.ibb.co/gvYzMpH/Captura-de-pantalla-35.png\" width=\"350\" alt=\"Captura-de-pantalla-35\" border=\"0\" center=\"auto\">\n<h2>¿Qué es la shell prompt?</h2>\n<p>Es  donde empezamos a escribir los comandos que ingresamos a la shell.</p>\n<p>Ejemplo</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$</code></pre>\n<h2>Gestor de paquetes PKG, APT</h2>\n<p>Es una colección de herramientas que sirven para automatizar el proceso de instalación, actualización, configuración y eliminación de paquetes de software.</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg install [nombreDelPaquete]</code></pre>\n<p>El comando pkg install nos permite instalar software que este dentro del repositorio donde estamos consultando.</p>\n<p>Ejemplos:</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg update</code></pre>\n<p>tree es una herramienta que nos va a permitir ver como un arbol nuestro sistema de archivos.</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg install tree</code></pre>\n<p>cmatrix es una simulacion de caracteres.</p>\n<pre><code class=\"hljs language-bash\"></code></pre>\n<p>El comando pkg search nombrePaquete, nos permite buscar en el repositorio si existe algun software con ese nombre.</p>\n<p>Ejemplos:</p>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg search python</code></pre>\n<pre><code class=\"hljs language-bash\">    [me@linuxbox ~]$ pkg search git</code></pre>\n<h2>Comandos basicos y necesarios en BASH</h2>\n<p>A continuación conocemos los comandos basicos.</p>\n<pre><code class=\"hljs language-bash\">Acciones basicas en Bash\r\n    Mover(mv)\r\n\tCrearCarpetas(mkdir)\r\n\tCrearArchivos(touch)\r\n    Escribir(<span class=\"hljs-built_in\">echo</span>, nano)\r\n    Ver (cat, more, less, file)\r\n\tVer sistema de archivos(ls)\r\n    Copiar(cp)\r\n\tBorrar(rm)\r\n    Cotar(cut)\r\n    Buscar(grep)      \r\n    Moverse por el sistema de archivos(<span class=\"hljs-built_in\">cd</span>)</code></pre>\n<h2>PRIMER EJERCICIO</h2>\n<pre><code class=\"hljs language-bash\">Autor: Jorge Alejandro García\r\nTema: Bash\r\nDescripción:\r\n\r\n- Crear un directorio llamado pruebas\r\n- Copiar el archivo /etc/passwd en dicho directorio\r\n- Listar los archivos existentes\r\n- Extraer únicamente las 10 primeras líneas del documento\r\n- Extraer únicamente las 10 últimas líneas del documento\r\n- Cambiar los permisos del fichero a 000\r\n- Probar a leer dicho fichero\r\n- Buscar la palabra “root” dentro del fichero \r\n\r\nComandos\r\n      grep [búsqueda] [fichero] Búsqueda de información en un fichero\r\n      grep -r [búsqueda] [directorio] Búsqueda recursiva de información \r\n      cut -d “[carácter]” -f [pos] Cortar una cadena mediante un caracter</code></pre>\n<h2>TAREA - para el 17-11-2022</h2>\n<pre><code class=\"hljs language-bash\">\r\n\tPkg install git\r\n\tPkg install python\r\n    git <span class=\"hljs-built_in\">clone</span> https://github.com/DeepSociety/wiki-termux\r\n    <span class=\"hljs-built_in\">cd</span> wiki-termux\r\n    chmod 777 wiki\r\n    ./wiki\r\nInstalar personalizaciones para termux:\r\n    Paso 1 : actualizar los paquetes de termux\r\n    apt update -y (poner y a todo para actualizar las versiones de paquetes).\r\n    apt upgrade -y (poner y a todo que instale las versiones mas recientes).\r\nPaso 2: instalar paquetes\r\n    pkg install python -y\r\n    pkg install python2 -y\r\n    pkg install git -y\r\n    Pip install lolcat\r\nPaso 3: clonar el repositorio\r\n    git <span class=\"hljs-built_in\">clone</span> https://github.com/noob-hackers/T-LOAD\r\nPaso 4: ejecutar los comandos \r\n    (<span class=\"hljs-built_in\">cd</span> <span class=\"hljs-variable\">$HOME</span>) o (<span class=\"hljs-built_in\">cd</span>) \r\n      ls\r\n    <span class=\"hljs-built_in\">cd</span> T-LOAD\r\n      ls \r\n    bash t-load.sh (poner y a todos este paso puede demorar un tiempo).\r\nPaso 5: una ves instalado todo.\r\n    Pedirá un primer y segundo nombre ponerlo a gusto.\r\n    Apretar enter\r\n    Finalizar termux con el comando <span class=\"hljs-built_in\">exit</span>.\r\n    y volver a entrar.\r\n</code></pre>\n","title":"Módulo 2","date":"2022-11-16","description":"Primeros pasos por Termux y Bash, herramientas útiles que estarán presentes en toda tu vida como desarrollador de software","coverUrl":"https://i.ibb.co/YcYzvjM/Termux.png","tags":["Android","Linux"," Bash"],"theme":"indigo"},"related":[{"id":"modulo_1","title":"Módulo 1","date":"2022-11-14","description":"En este post encontraras las instrucciones necesarias para instalar las apliaciones de: TERMUX, ACODE, AIDE, Java N-IDE","coverUrl":"https://i.ibb.co/XpT8F87/Dise-o-sin-t-tulo.png","autor":"Rodrigo","tags":["Android","Linux"]},{"id":"modulo_2","title":"Módulo 2","date":"2022-11-16","description":"Primeros pasos por Termux y Bash, herramientas útiles que estarán presentes en toda tu vida como desarrollador de software","coverUrl":"https://i.ibb.co/YcYzvjM/Termux.png","tags":["Android","Linux"," Bash"]},{"id":"modulo_3","title":"Módulo 3","date":"2022-11-17","description":"Primeros pasos por Git y Github, Herramientas poderosas que te ayudarán a mantener un control de versiones sobre tu proyectos de desarrollo.","coverUrl":"https://camo.githubusercontent.com/38f113b96a368dfb7f634d2f2da97e7b8c748042d2a284b97c3fad048bb3ff55/68747470733a2f2f6d69726f2e6d656469756d2e636f6d2f6d61782f323733322f312a6d74736b3366515f4252656d466964686b656c3364412e706e67","tags":["Git","GitHub"]},{"id":"modulo_4","title":"Módulo 4","date":"2022-11-18","description":"En este módulo se deatallan ejercicios, recursos como libros, paginas, canales de YouTube y algunos retos","coverUrl":"https://media.geeksforgeeks.org/wp-content/uploads/20220831170024/GitPush3.jpg","tags":["Git","GitHub","Recursos"]},{"id":"octim","title":"Herramientas necesarias","date":"2022-11-26","description":"En este módulo se deatallan  links, videos, tutoriales para que podamos continuar el curso","coverUrl":"https://c8.alamy.com/compes/2j2hw74/hombre-y-robot-con-ordenadores-sentados-juntos-en-el-lugar-de-trabajo-fuerza-de-trabajo-de-inteligencia-artificial-de-futura-ilustracion-de-vector-plano-amistad-ai-cooperacion-2j2hw74.jpg","tags":["Git","GitHub","Recursos","Bash"]},{"id":"ICPC_UMSS","title":"Programación Competitiva UMSS","date":"2022-12-16","description":"En este módulo se deatallan ejercicios, recursos como libros, paginas, canales de YouTube y algunos retos","coverUrl":"https://narsten.com/wp-content/uploads/2022/09/icpc19.png","tags":["ICPC","RPC","PC","Contests"]}]},"__N_SSG":true}